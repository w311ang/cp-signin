# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]

  workflow_dispatch:
    inputs:
      captcha:
        description: ''
        required: false
        default: 'false'

  schedule:
    - cron: '0 12 * * *'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Cache
      uses: actions/cache@v2
      with:
        path: ./cookies.txt
        key: build-${{ github.run_id }}
        restore-keys: |
          build-
    - name: Setup pytools
      run: |
        curl -O https://raw.githubusercontent.com/w311ang/pytools/main/pytools.py
        curl -O https://raw.githubusercontent.com/w311ang/pytools/main/aes.py
    - name: Set proxy
      env:
        config: ${{ secrets.ss_config }}
      run: |
        sudo apt-get install shadowsocks-libev simple-obfs proxychains-ng
        sudo -E sh -c 'echo $config|base64 -d > /etc/shadowsocks-libev/config.json'
        sudo sh -c 'echo "\
        [Unit]
        Description=Shadowsocks
        After=network.target
        [Service]
        ExecStart=ss-local -c /etc/shadowsocks-libev/config.json
        Rnestart=on-abort
        [Install]
        WantedBy=multi-user.target\
        ">/etc/systemd/system/shadowsocks.service'
        sudo systemctl daemon-reload
        sudo systemctl start shadowsocks
        sleep 3s
        systemctl status --no-pager shadowsocks
        sudo sed -i 's/socks4 	127.0.0.1 9050/socks5 127.0.0.1 1080/g' /etc/proxychains4.conf
        sudo sed -i 's/#quiet_mode/quiet_mode/g' /etc/proxychains4.conf
    - name: Run
      if: github.event.inputs.captcha != 'true'
      env:
        username: ${{ secrets.username }}
        password: ${{ secrets.password }}
        talk_pw: ${{ secrets.talk_pw }}
        pw: ${{ secrets.pw }}
        host: ${{ secrets.host }}
        jmail: ${{ secrets.jmail_password }}
      run: |
        proxychains python -u signin.py
    - name: Run captcha
      if: github.event.inputs.captcha == 'true'
      env:
        username: ${{ secrets.username }}
        password: ${{ secrets.password }}
        talk_pw: ${{ secrets.talk_pw }}
        pw: ${{ secrets.pw }}
        host: ${{ secrets.host }}
        jmail: ${{ secrets.jmail_password }}
      run: |
        captcha="true" python -u signin.py
        captcha="true" python -u signin.py
        python -u signin.py
